/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GETClientV3Sync {
  account_data?: AccountData;
  device_lists?: DeviceLists;
  device_one_time_keys_count?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^.".
     */
    [k: string]: number;
  };
  next_batch: string;
  presence?: Presence;
  rooms?: {
    invite?: {
      [k: string]: InvitedRoom;
    };
    join?: {
      [k: string]: JoinedRoom;
    };
    knock?: {
      [k: string]: KnockedRoom;
    };
    leave?: {
      [k: string]: LeftRoom;
    };
    [k: string]: unknown;
  };
  to_device?: ToDevice;
  [k: string]: unknown;
}
export interface AccountData {
  events?: Event[];
  [k: string]: unknown;
}
export interface Event {
  content: {
    [k: string]: unknown;
  };
  type: string;
  [k: string]: unknown;
}
export interface DeviceLists {
  changed?: string[];
  left?: string[];
  [k: string]: unknown;
}
export interface Presence {
  events?: Event[];
  [k: string]: unknown;
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^.".
 */
export interface InvitedRoom {
  invite_state?: InviteState;
  [k: string]: unknown;
}
export interface InviteState {
  events?: StrippedStateEvent[];
  [k: string]: unknown;
}
export interface StrippedStateEvent {
  content: {
    [k: string]: unknown;
  };
  sender: string;
  state_key: string;
  type: string;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^.".
 */
export interface JoinedRoom {
  account_data?: AccountData;
  ephemeral?: Ephemeral;
  state?: State;
  summary?: RoomSummary;
  timeline?: Timeline;
  unread_notifications?: NotificationCounts;
  unread_thread_notifications?: {
    [k: string]: NotificationCounts;
  };
  [k: string]: unknown;
}
export interface Ephemeral {
  events?: Event[];
  [k: string]: unknown;
}
export interface State {
  events?: ClientEventWithoutRoomID[];
  [k: string]: unknown;
}
export interface ClientEventWithoutRoomID {
  content: {
    [k: string]: unknown;
  };
  event_id: string;
  origin_server_ts: number;
  sender: string;
  state_key?: string;
  type: string;
  unsigned?: {
    age?: number;
    prev_content?: {
      [k: string]: unknown;
    };
    redacted_because?: ClientEventWithoutRoomID;
    transaction_id?: string;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface RoomSummary {
  "m.heroes"?: string[];
  "m.invited_member_count"?: number;
  "m.joined_member_count"?: number;
  [k: string]: unknown;
}
export interface Timeline {
  events: ClientEventWithoutRoomID[];
  limited?: boolean;
  prev_batch?: string;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^.".
 */
export interface NotificationCounts {
  highlight_count?: number;
  notification_count?: number;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^.".
 */
export interface KnockedRoom {
  knock_state?: {
    events?: StrippedStateEvent[];
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^.".
 */
export interface LeftRoom {
  account_data?: AccountData;
  state?: State;
  timeline?: Timeline;
  [k: string]: unknown;
}
export interface ToDevice {
  events?: Event[];
  [k: string]: unknown;
}
